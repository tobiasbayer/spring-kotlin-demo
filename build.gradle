buildscript {
	ext {
		kotlinVersion = '1.3.11'
	}
	repositories {
		mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
	}

	dependencies {
		classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
		classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
		classpath("gradle.plugin.com.google.cloud.tools:jib-gradle-plugin:1.2.0")
	}
}

plugins {
	id "org.jetbrains.kotlin.jvm" version "1.3.21"
	id "org.jetbrains.kotlin.kapt" version "1.3.21"
	id "org.jetbrains.kotlin.plugin.allopen" version "1.3.21"
	id "com.github.johnrengelman.shadow" version "4.0.2"
	id "application"
	id "com.google.cloud.tools.jib" version "1.3.0"
}

configurations {
	developmentOnly
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8
compileKotlin {
	kotlinOptions {
		freeCompilerArgs = ["-Xjsr305=strict"]
		jvmTarget = "1.8"
	}
}
compileTestKotlin {
	kotlinOptions {
		freeCompilerArgs = ["-Xjsr305=strict"]
		jvmTarget = "1.8"
	}
}

repositories {
	mavenCentral()
}

dependencies {
	compile('com.fasterxml.jackson.module:jackson-module-kotlin:2.9.8')
	compile("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
	compile("org.jetbrains.kotlin:kotlin-reflect")
	compile("io.micronaut:micronaut-http-client:1.1.1")
	compile("io.micronaut.aws:micronaut-function-aws-api-proxy:1.1.1")
	compile("io.micronaut:micronaut-runtime:1.1.1")
	compile("io.micronaut:micronaut-router:1.1.1")
	compile("io.micronaut:micronaut-function:1.1.1")
	compile("io.micronaut:micronaut-security:1.1.1")
	compile("io.micronaut:micronaut-validation:1.1.1")

	kapt("io.micronaut:micronaut-inject-java:1.1.1")
	kapt("io.micronaut:micronaut-validation:1.1.1")

	developmentOnly("io.micronaut:micronaut-http-server-netty:1.1.1")
}

run.classpath += configurations.developmentOnly

jib {
	to {
		image = "291404320502.dkr.ecr.eu-central-1.amazonaws.com/guestbook"
		tags = [project.version]
	}
}

task awsECRLogin(type: Exec) {
	standardInput = System.in
	executable = "sh"
	args = ["-c", "aws ecr get-login --region eu-central-1 --no-include-email | sh -"]
}

tasks.getByPath("jib").dependsOn("awsECRLogin")

